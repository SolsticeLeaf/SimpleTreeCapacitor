stages:
  - build
  - shadowjar
  - release

variables:
  PROJECT_NAME: 'SimpleTreeCapitator'

workflow:
  rules:
    - if: $CI_COMMIT_BRANCH == 'master'

default:
  tags:
    - 'mais'
  image: gradle:jdk17

build:
  stage: build
  before_script:
    - echo "Building..."
  script:
    - gradle clean build
  artifacts:
    paths:
      - build/
    expire_in: 1 hour

shadowjar:
  stage: shadowjar
  before_script:
    - echo "Creating shadowJar..."
  script:
    - gradle shadowJar
    - ls -la build/libs/
  artifacts:
    paths:
      - build/libs/${PROJECT_NAME}-*-all.jar
    expire_in: 1 hour

release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  needs:
    - job: shadowjar
      artifacts: true
  script:
    - ls -la build/libs/ || echo "No files found in build/libs/"
    - VERSION=$(ls build/libs/${PROJECT_NAME}-*-all.jar | sed -n "s/.*${PROJECT_NAME}-\([0-9]*\.[0-9]*\.[0-9]*\)-all\.jar/\1/p")
    - if [ -z "$VERSION" ]; then echo "Failed to extract version"; exit 1; fi
    - mv build/libs/${PROJECT_NAME}-${VERSION}-all.jar build/libs/${PROJECT_NAME}-${VERSION}.jar
    - echo "Creating release for ${PROJECT_NAME} ${VERSION}"
    - release-cli create --name "${PROJECT_NAME} v${VERSION}" --description "$CI_COMMIT_MESSAGE" --tag-name "v${VERSION}" --ref "$CI_COMMIT_SHA" --assets-links "{\"name\":\"${PROJECT_NAME}-${VERSION}.jar\",\"url\":\"${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${PROJECT_NAME}/${VERSION}/${PROJECT_NAME}-${VERSION}.jar\",\"link_type\":\"package\"}"
